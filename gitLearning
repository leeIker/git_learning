现在安装完以后进行配置
首先是path路径上配置git.bin目录
然后打开gitbash 在里面配置user.name和user.email
命令为 git config-- global user.name"user-name"
git config--global user.email 'user-eamil'
查看C盘用户中是否出现gitconfig文件里面会有用户名和邮箱
配置远程托管仓库  申请github账户
在本地生成ssh密钥
生成口令为 ssh-keygen -t -C user-email，然后再C盘中的user中找
ssh文件夹，找到其中的两个秘钥，讲公钥配置到github中
然后再bash中输入ssh -T git@github.com
然后再接下来的选择中选择yes将本地git连接到github

以上内容为git的配置内容

建立本地仓库用git init 命令
git init file_name ，file_name是制定的建仓的文件名 此为建仓操作

以下git操作

首先是git工作区 缓存区 和本地版本库之间的操作
将工作区推送到缓存区为 git add file——name  .代表所有文件
将缓存区推送到本地版本库为 git commit -m‘注释内容’  -m的意思就是增加注解
git commit -am‘注释内容’则可以直接将工作区文件提交到版本库中

git reset HEAD 则是 将版本库分支加载到缓存区
git checkout . 将缓存区文件保存到工作区
git rm --cached file-name 命令直接删除 缓存区
git rm file——name会将工作区和缓存去的文件全部删除

git checkout HEAD .或者git checkout HEAD file——name会将版本库文件替换掉
缓存区和工作区文件




在github中建立是有唯一标示符有http和ssh两种都可以
打开bash在bash中输入git remote add origin 唯一标示符
建立本地项目与远程项目的连接
git操作有四部分
分别是第一次发布 第一次下载
更新  下载
git push -u origin master 将本地分支推送到github

次一次下载项目
git下载是 git clone 项目唯一标识符   很简单
还可以在唯一标识符后面加上自己的字符串作为项目名字


更新为 
git push ogigin master提交到github比第一次提交少一个-u

下载 git pull；


git命令 ls -a展示文件（包含隐藏文件） ls命令只展示文件   cat file——name展示文件内容
touch命令改变文件的时间属性，如果不存在则创建空白文件
git status -s 显示你上一次操作有没有造成修改

git diff展示修改的详细结果（为未缓存的工作区不同）
git diff --cached 为缓存区的不同
git diff HEAD 查看已经缓存和未缓存的所有不同


分支管理内容
git branch branch——name  建立分支 
git checkout （branch——name）切换分支
git merge为合并分支的命令
git branch命令会列出分支
git branch branch——name（已经存在）会切换到改分支
git branch -d branch——name 删除分支

合并文件是git merge branch——name 会将branch——name的版本合并到master中





